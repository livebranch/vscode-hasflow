{
	"name": "hasflow",
	"displayName": "HasFlow",
	"version": "0.0.5",
	"publisher": "livebranchstudios",
	"description": "Extension for HasFlow file schemas",
	"author": {
		"name": "LiveBranchStudios",
		"email": "support@livebranchstudios.com.au"
	},
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/livebranch/vscode-hasflow.git"
	},
	"engines": {
		"vscode": "^1.61.0"
	},
	"categories": [
		"Programming Languages",
		"Debuggers"
	],
	"extensionDependencies": [
		"hmarr.cel",
		"redhat.vscode-yaml"
	],
	"main": "./dist/ext/extension.js",
	"scripts": {
		"vscode:prepublish": "yarn run package-ext",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/extension.webpack.config.js",
		"watch2": "tsc -watch -p ./",
		"pretest": "yarn run compile && yarn run lint",
		"test": "node ./out/test/runTest.js",
		"package": "vsce package",
		"publish": "vsce publish",
		"package-ext": "webpack --mode production --config ./build/extension.webpack.config.js",
		"compile-web": "webpack --devtool nosources-source-map --config ./build/web-extension.webpack.config.js",
		"watch-web": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/web-extension.webpack.config.js",
		"package-web": "webpack --mode production --config ./build/web-extension.webpack.config.js"
	},
	"dependencies": {
		"await-notify": "1.0.1",
		"child_process": "^1.0.2",
		"tree-kill": "^1.2.2",
		"vscode-debugadapter": "^1.50.0",
		"vscode-debugprotocol": "^1.50.1"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "^14.14.37",
		"@types/vscode": "^1.61.0",
		"@typescript-eslint/eslint-plugin": "^5.2.0",
		"@typescript-eslint/parser": "^5.2.0",
		"eslint": "^8.1.0",
		"glob": "^7.2.0",
		"mocha": "^9.1.3",
		"ts-loader": "^8.3.0",
		"typescript": "^4.4.4",
		"vsce": "^2.15.0",
		"vscode-debugadapter-testsupport": "^1.50.0",
		"webpack": "^5.91.0",
		"webpack-cli": "^3.3.12"
	},
	"activationEvents": [
		"onDebugResolve:hasflow",
		"onDebugDynamicConfigurations:hasflow",
		"workspaceContains:**/site.yml",
		"onLanguage:hasflow"
	],
	"contributes": {
		"iconThemes": [
			{
				"id": "hasflow",
				"label": "Hasflow theme",
				"path": "./icon-assignments.json"
			}
		],
		"languages": [
			{
				"id": "item.hasflow.yaml",
				"extensions": [
					".item.yml.disabled"
				],
				"filenames": [
					"item.yml.disabled"
				],
				"icon": {
					"light": "./fileicons/item-128-128.png",
					"dark": "./fileicons/item-128-128.png"
				}
			},
			{
				"id": "hasflow.seeder",
				"extensions": [
					".seeder.yml.disabled"
				]
			},
			{
				"id": "hasflow.store",
				"extensions": [
					".store.yml.disabled"
				]
			},
			{
				"id": "hasflow.model",
				"extensions": [
					".model.yml.disabled"
				]
			},
			{
				"id": "hasflow.tests",
				"extensions": [
					".tests.yml.disabled"
				]
			},
			{
				"id": "hasflow.template",
				"extensions": [
					".template.yml.disabled"
				]
			},
			{
				"id": "hasflow.routes",
				"extensions": [
					".routes.yml.disabled"
				]
			},
			{
				"id": "hasflow.policy",
				"extensions": [
					".policy.yml.disabled"
				]
			},
			{
				"id": "hasflow.external",
				"extensions": [
					".external.yml.disabled"
				]
			},
			{
				"id": "hasflow.etl",
				"extensions": [
					".etl.yml.disabled"
				]
			},
			{
				"id": "hasflow.migration",
				"extensions": [
					".migration.yml.disabled"
				]
			},
			{
				"id": "hasflow.interface",
				"extensions": [
					".interface.yml.disabled"
				]
			},
			{
				"id": "hasflow.site",
				"extensions": [
					".site.yml.disabled"
				]
			},
			{
				"id": "hasflow.provider",
				"extensions": [
					".provider.yml.disabled"
				]
			}
		],
		"grammars": [
			{
				"path": "./syntaxes/cel.injection.json",
				"scopeName": "cel-expression.injection",
				"injectTo": [
					"source.yaml"
				],
				"embeddedLanguages": {
					"meta.embedded.block.cel": "cel"
				}
			},
			{
				"language": "item.hasflow.yaml",
				"path": "./syntaxes/hflow.tmLanguage.json",
				"scopeName": "source.exposure.yaml"
			}
		],
		"yamlValidation": [
			{
				"fileMatch": "*.item.yml",
				"url": "https://hasflow.org/schemas/exposure"
			},
			{
				"fileMatch": "item.yml",
				"url": "https://hasflow.org/schemas/exposure"
			},
			{
				"fileMatch": "*.iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "*.model.yml",
				"url": "https://hasflow.org/schemas/model"
			},
			{
				"fileMatch": "model.yml",
				"url": "https://hasflow.org/schemas/model"
			},
			{
				"fileMatch": "*.seed.yml",
				"url": "https://hasflow.org/schemas/seeder"
			},
			{
				"fileMatch": "seed.yml",
				"url": "https://hasflow.org/schemas/seeder"
			},
			{
				"fileMatch": "*.process.yml",
				"url": "https://hasflow.org/schemas/processor"
			},
			{
				"fileMatch": "process.yml",
				"url": "https://hasflow.org/schemas/processor"
			},
			{
				"fileMatch": "*.service.yml",
				"url": "https://hasflow.org/schemas/service"
			},
			{
				"fileMatch": "service.yml",
				"url": "https://hasflow.org/schemas/service"
			},
			{
				"fileMatch": "*.store.yml",
				"url": "https://hasflow.org/schemas/store"
			},
			{
				"fileMatch": "store.yml",
				"url": "https://hasflow.org/schemas/store"
			},
			{
				"fileMatch": "*.tests.yml",
				"url": "https://hasflow.org/schemas/tests"
			},
			{
				"fileMatch": "tests.yml",
				"url": "https://hasflow.org/schemas/tests"
			},
			{
				"fileMatch": "*.template.yml",
				"url": "https://hasflow.org/schemas/template"
			},
			{
				"fileMatch": "template.yml",
				"url": "https://hasflow.org/schemas/template"
			},
			{
				"fileMatch": "*.routes.yml",
				"url": "https://hasflow.org/schemas/routes"
			},
			{
				"fileMatch": "routes.yml",
				"url": "https://hasflow.org/schemas/routes"
			},
			{
				"fileMatch": "*.role.yml",
				"url": "https://hasflow.org/schemas/role"
			},
			{
				"fileMatch": "role.yml",
				"url": "https://hasflow.org/schemas/role"
			},
			{
				"fileMatch": "*.external.yml",
				"url": "https://hasflow.org/schemas/external"
			},
			{
				"fileMatch": "external.yml",
				"url": "https://hasflow.org/schemas/external"
			},
			{
				"fileMatch": "*.etl.yml",
				"url": "https://hasflow.org/schemas/etl"
			},
			{
				"fileMatch": "etl.yml",
				"url": "https://hasflow.org/schemas/etl"
			},
			{
				"fileMatch": "*.migrate.yml",
				"url": "https://hasflow.org/schemas/migration"
			},
			{
				"fileMatch": "migrate.yml",
				"url": "https://hasflow.org/schemas/migration"
			},
			{
				"fileMatch": "*.iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "*.query.yml",
				"url": "https://hasflow.org/schemas/query"
			},
			{
				"fileMatch": "iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "site.yml",
				"url": "https://hasflow.org/schemas/site"
			},
			{
				"fileMatch": "*.provider.yml",
				"url": "https://hasflow.org/schemas/provider"
			},
			{
				"fileMatch": "provider.yml",
				"url": "https://hasflow.org/schemas/provider"
			}
		],
		"debuggers": [
			{
				"type": "hasflow",
				"languages": [
					"yaml"
				],
				"label": "HasFlow",
				"program": "./out/debugAdapter.js",
				"runtime": "node",
				"configurationAttributes": {
					"launch": {
						"required": [],
						"properties": {
							"debugger": {
								"type": "string",
								"description": "Absolute path to debugger.",
								"default": "hasflow"
							},
							"env": {
								"type": "object",
								"description": "Environment variables to pass to debugger.",
								"default": {}
							},
							"bundlePath": {
								"type": "string",
								"description": "Absolute path to debugger.",
								"default": ""
							},
							"seeders": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "A list of seeder tags to execute.",
								"default": []
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Launch",
						"type": "hasflow",
						"request": "launch",
						"debugger": "hasflow --watch",
						"seeders": []
					}
				],
				"configurationSnippets": [],
				"variables": {}
			}
		]
	}
}
