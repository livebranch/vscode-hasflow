{
	"name": "hasflow",
	"displayName": "HasFlow",
	"version": "0.0.6",
	"publisher": "livebranchstudios",
	"description": "Extension for HasFlow file schemas",
	"author": {
		"name": "LiveBranchStudios",
		"email": "support@livebranchstudios.com.au"
	},
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/livebranch/vscode-hasflow.git"
	},
	"engines": {
    "vscode": "^1.66.0"
	},
  "icon": "images/hasflow-icon.png",
	"categories": [
		"Programming Languages",
		"Debuggers"
	],
	"extensionDependencies": [
		"hmarr.cel",
		"redhat.vscode-yaml"
	],
	"disabledScripts": {
		"esbuild-web": "esbuild ./src/web-extension.ts --bundle --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=browser --outfile=dist/web-extension.js"
	},
	"scripts": {
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=node --outfile=dist/extension.js",
    "watch": "npm run -S esbuild-base -- --sourcemap --sources-content=false --watch",
    "watch-web": "npm run -S esbuild-web -- --sourcemap --sources-content=false --watch",
    "build": "npm run -S esbuild-base -- --sourcemap --sources-content=false # && npm run -S esbuild-web -- --sourcemap --sources-content=false",
    "package": "vsce package",
    "publish": "vsce publish",
    "publish-pre-release": "vsce publish --pre-release",
    "vscode:prepublish": "rimraf dist && npm run -S esbuild-base -- --minify # && npm run -S esbuild-web -- --minify",
    "test": "npm run typecheck"
	},
	"dependencies": {
		"child_process": "^1.0.2",
		"tree-kill": "^1.2.2"
	},
	"devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^14.14.37",
    "@types/vscode": "^1.66.0",
    "@typescript-eslint/eslint-plugin": "^5.17.0",
    "@typescript-eslint/parser": "^5.17.0",
    "@vscode/debugadapter": "^1.56.0",
    "@vscode/debugadapter-testsupport": "^1.56.0",
    "await-notify": "^1.0.1",
    "base64-js": "^1.5.1",
    "esbuild": "^0.14.29",
    "eslint": "^8.12.0",
    "events": "^3.3.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.2",
    "path-browserify": "^1.0.1",
    "rimraf": "^3.0.2",
    "typescript": "^4.6.3",
    "url": "^0.11.0",
    "vsce": "^2.7.0"
	},
	"main": "./dist/extension.js",
	"activationEvents": [
		"onDebugResolve:hasflow",
		"onDebugDynamicConfigurations:hasflow",
		"workspaceContains:**/site.yml",
		"onLanguage:hasflow",
    "onCommand:extension.hasflow-debug.runEditorContents",
    "onCommand:extension.hasflow-debug.debugEditorContents"
	],
	"contributes": {
		"commands": [
			{
				"command": "extension.hasflow-debug.debugEditorContents",
				"title": "Debug File",
				"category": "Hasflow Debug",
				"enablement": "!inDebugMode",
				"icon": "$(debug-alt)"
			},
			{
				"command": "extension.hasflow-debug.runEditorContents",
				"title": "Run File",
				"category": "Hasflow Debug",
				"enablement": "!inDebugMode",
				"icon": "$(play)"
			}
		],
		"menus": {
      "editor/title/run": [
        {
          "command": "extension.hasflow-debug.runEditorContents",
          "when": "resourceLangId == yaml",
          "group": "navigation@1"
        },
        {
          "command": "extension.hasflow-debug.debugEditorContents",
          "when": "resourceLangId == yaml",
          "group": "navigation@2"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.hasflow-debug.debugEditorContents",
          "when": "resourceLangId == yaml"
        },
        {
          "command": "extension.hasflow-debug.runEditorContents",
          "when": "resourceLangId == yaml"
        }
      ]
    },
		"iconThemes": [
			{
				"id": "hasflow",
				"label": "Hasflow theme",
				"path": "./icon-assignments.json"
			}
		],
		"grammars": [
			{
				"path": "./syntaxes/cel.injection.json",
				"scopeName": "cel-expression.injection",
				"injectTo": [
					"source.yaml"
				],
				"embeddedLanguages": {
					"meta.embedded.block.cel": "cel"
				}
			}
		],
		"yamlValidation": [
			{
				"fileMatch": "*.item.yml",
				"url": "https://hasflow.org/schemas/exposure"
			},
			{
				"fileMatch": "item.yml",
				"url": "https://hasflow.org/schemas/exposure"
			},
			{
				"fileMatch": "*.iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "*.seed.yml",
				"url": "https://hasflow.org/schemas/seeder"
			},
			{
				"fileMatch": "seed.yml",
				"url": "https://hasflow.org/schemas/seeder"
			},
			{
				"fileMatch": "*.process.yml",
				"url": "https://hasflow.org/schemas/processor"
			},
			{
				"fileMatch": "process.yml",
				"url": "https://hasflow.org/schemas/processor"
			},
			{
				"fileMatch": "*.service.yml",
				"url": "https://hasflow.org/schemas/service"
			},
			{
				"fileMatch": "service.yml",
				"url": "https://hasflow.org/schemas/service"
			},
			{
				"fileMatch": "*.store.yml",
				"url": "https://hasflow.org/schemas/store"
			},
			{
				"fileMatch": "store.yml",
				"url": "https://hasflow.org/schemas/store"
			},
			{
				"fileMatch": "*.tests.yml",
				"url": "https://hasflow.org/schemas/tests"
			},
			{
				"fileMatch": "tests.yml",
				"url": "https://hasflow.org/schemas/tests"
			},
			{
				"fileMatch": "*.template.yml",
				"url": "https://hasflow.org/schemas/template"
			},
			{
				"fileMatch": "template.yml",
				"url": "https://hasflow.org/schemas/template"
			},
			{
				"fileMatch": "*.routes.yml",
				"url": "https://hasflow.org/schemas/routes"
			},
			{
				"fileMatch": "routes.yml",
				"url": "https://hasflow.org/schemas/routes"
			},
			{
				"fileMatch": "*.policy.yml",
				"url": "https://hasflow.org/schemas/policy"
			},
			{
				"fileMatch": "policy.yml",
				"url": "https://hasflow.org/schemas/policy"
			},
			{
				"fileMatch": "*.external.yml",
				"url": "https://hasflow.org/schemas/external"
			},
			{
				"fileMatch": "external.yml",
				"url": "https://hasflow.org/schemas/external"
			},
			{
				"fileMatch": "*.etl.yml",
				"url": "https://hasflow.org/schemas/etl"
			},
			{
				"fileMatch": "etl.yml",
				"url": "https://hasflow.org/schemas/etl"
			},
			{
				"fileMatch": "*.migrate.yml",
				"url": "https://hasflow.org/schemas/migration"
			},
			{
				"fileMatch": "migrate.yml",
				"url": "https://hasflow.org/schemas/migration"
			},
			{
				"fileMatch": "*.iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "iface.yml",
				"url": "https://hasflow.org/schemas/interface"
			},
			{
				"fileMatch": "site.yml",
				"url": "https://hasflow.org/schemas/site"
			},
			{
				"fileMatch": "*.provider.yml",
				"url": "https://hasflow.org/schemas/provider"
			},
			{
				"fileMatch": "provider.yml",
				"url": "https://hasflow.org/schemas/provider"
			}
		],
		"debuggers": [
			{
				"type": "hasflow",
				"languages": [
					"yaml"
				],
				"label": "HasFlow",
				"program": "./out/debugAdapter.js",
				"runtime": "node",
				"configurationAttributes": {
					"launch": {
						"required": [],
						"properties": {
							"debugger": {
								"type": "string",
								"description": "Absolute path to debugger.",
								"default": null
							},
							"env": {
								"type": "object",
								"description": "Environment variables to pass to debugger.",
								"default": {}
							},
							"bundlePath": {
								"type": "string",
								"description": "Absolute path to debugger.",
								"default": ""
							},
							"initialSeederTags": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "A list of seeder tags to execute.",
								"default": []
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Launch",
						"type": "hasflow",
						"request": "launch",
						"debugger": "hasflow",
						"initialSeederTags": []
					},
					{
						"type": "pwa-chrome",
						"request": "launch",
						"name": "Launch Chrome against localhost",
						"url": "http://localhost:8080",
						"webRoot": "${workspaceFolder}/frontend"
					}
				],
				"configurationSnippets": [],
				"variables": {}
			}
		]
	}
}
